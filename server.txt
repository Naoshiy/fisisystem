new formset dynamic

https://www.youtube.com/watch?v=mO-pfdJpnBA

tabela js
https://www.youtube.com/watch?v=ImkWbhXnISM


<script>   
    $("#mat").click(function(){
        adicionarItemTable();
            });

// --------------- function with iteration----------------------
function adicionarItemTable() {
            // iteranndo com order
            var count = $('#order').children().length;

            var POnumber = $('#id_product-'+ count +'-PO_number').val();
            var ordernumber     = $('#id_product-order-Order_number').val();
            var SideMark = $('#id_product-order-Side_Mark').val();
            var Carrier = $('#id_product-order-carrier').val();
            var RollNumber = $('#id_product-order-Roll_number').val();
            var width = $('#id_product-order-width').val();
            var length = $('#id_product-order-length').val();
            var Quantity = $('#id_product-order-Quantity').val();
            var MaterialType = $('#id_product-order-material_type').val();
            var store = $('#id_product-order-store').val();
        
            var linha = "" +
                "<tr>" +
                   "<td>"+POnumber+"</td>"+
                   "<td>"+ordernumber+"</td>"+
                   "<td>"+SideMark+"</td>"+
                   "<td>"+Carrier+"</td>"+
                   "<td>"+RollNumber+"</td>"+
                   "<td>"+width+"</td>"+
                   "<td>"+length+"</td>"+
                   "<td>"+Quantity+"</td>"+
                   "<td>"+MaterialType+"</td>"+
                   "<td>"+store+"</td>"+
                   
                "  <td><a href='#' class='btn btn-danger btn-remove btn-xs'>remover</a></td>"+
                "</tr>";
            $('#table-list').append( linha );    
            $('#id_product-'+ count +'-PO_number').val('');
            $('#id_product-order-Order_number').val('');
            $('#id_product-order-Side_Mark').val('');
            $('#id_product-order-carrier').val('');
            $('#id_product-order-Roll_number').val('');
            $('#id_product-order-width').val('');
            $('#id_product-order-length').val('');
            $('#id_product-order-Quantity').val('');
            $('#id_product-order-material_type').val('');
        }

// ------------------final function with iteration------------------

          $(".tbody").on("click", "remove-list", function(e){
              $(this).closest('tr').remove();
          });
              
</script>

# -----------------------------------------------------pdf ----------------------------------------------
# https://www.youtube.com/watch?v=1x_ACMFzGYM&list=PLCC34OHNcOtqW9BJmgQPPzUpJ8hl49AGy&index=17
    
from django.http import FileResponse
import io
from reportlab.pdfgen import canvas
from reportlab.lib.units import inch
from reportlab.lib.pagesizes import letter
from .models import Billofland

def venue_pdf(request):
    buf = io.BytesIO()
    c = canvas.Canvas(buf, pagesize=letter, bottomup=0)
    textob = c.beginText()
    textob.setTextOrigin(inch, inch)
    textob.setFont("Helvetica", 14)
    
    #design the model
    arm = Billofland.objects.all()
    lines_bill =[]
    for i in arm:
        lines_bill.append(i.bill_of_land)
        # lines_bill.append(i.date)
        lines_bill.append(i.vendor)
        lines_bill.append(" ")
    # lines_bill = ["Line 1","Line 2"]
    for line in lines_bill:
        textob.textLine(line)   
        
    c.drawText(textob)
    c.showPage()
    c.save()
    buf.seek(0)
    
    # mat = Material_type.objects.all()
    # lines_mat= []
    # for y in mat:     
    #     lines_mat.append(y.PO_number)
    #     lines_mat.append(y.Order_number)
    #     lines_mat.append(y.Side_Mark)
    #     lines_mat.append(y.carrier)
    #     lines_mat.append(y.Roll_number)
    #     lines_mat.append(y.width)
    #     lines_mat.append(y.length)
    #     lines_mat.append(y.Quantity)
    #     lines_mat.append(y.take_out_date)
    #     lines_mat.append(y.take_out_name)
    #     lines_mat.append(y.material_type)
    #     # lines_mat.append(y.store)
    #     lines_mat("")
    #     for line in lines_mat:
    #         textob.textLine(line)
    
    return FileResponse(buf, as_attachment=False, filename='venue.pdf')

    # -----------------------------------------------------pdf ----------------------------------------------
# https://www.youtube.com/watch?v=1x_ACMFzGYM&list=PLCC34OHNcOtqW9BJmgQPPzUpJ8hl49AGy&index=17
    
from django.http import FileResponse
import io
from reportlab.pdfgen import canvas
from reportlab.lib.units import inch
from reportlab.lib.pagesizes import letter
from .models import Billofland

def venue_pdf(request):
    buf = io.BytesIO()
    c = canvas.Canvas(buf, pagesize=letter, bottomup=0)
    textob = c.beginText()
    textob.setTextOrigin(inch, inch)
    textob.setFont("Helvetica", 14)
    
    #design the model
    arm = Billofland.objects.all()
    lines_bill =[]
    for i in arm:
        lines_bill.append(i.bill_of_land)
        # lines_bill.append(i.date)
        lines_bill.append(i.vendor)
        lines_bill.append(" ")
    # lines_bill = ["Line 1","Line 2"]
    for line in lines_bill:
        textob.textLine(line)   
        
    c.drawText(textob)
    c.showPage()
    c.save()
    buf.seek(0)
    
    # mat = Material_type.objects.all()
    # lines_mat= []
    # for y in mat:     
    #     lines_mat.append(y.PO_number)
    #     lines_mat.append(y.Order_number)
    #     lines_mat.append(y.Side_Mark)
    #     lines_mat.append(y.carrier)
    #     lines_mat.append(y.Roll_number)
    #     lines_mat.append(y.width)
    #     lines_mat.append(y.length)
    #     lines_mat.append(y.Quantity)
    #     lines_mat.append(y.take_out_date)
    #     lines_mat.append(y.take_out_name)
    #     lines_mat.append(y.material_type)
    #     # lines_mat.append(y.store)
    #     lines_mat("")
    #     for line in lines_mat:
    #         textob.textLine(line)
    
    return FileResponse(buf, as_attachment=False, filename='venue.pdf')


https://www.youtube.com/watch?v=zvsCmSTGAYY

Curso de Django 3 | Generando PDFs con Django usando xhtml2pdf | Parte I | Video 68


lllllllllllllllllllllfa-li

# xhtml2pdf
import os
from django.conf import settings
from django.http import HttpResponse
from django.template.loader import get_template
from xhtml2pdf import pisa
from django.contrib.staticfiles import finders

class tagpdfView(views.View):
    def get(self, request, *args, **kwargs):
        # try:
            
            template = get_template('cadastros/pdf.html')
            context = {
                'context':'teste',
                }
            html = template.render(context)
            response = HttpResponse(content_type='application/pdf')
            # response['Content-Disposition'] = 'attachment; filename="report.pdf"'
            
            pisa_status = pisa.CreatePDF(html, dest=response) #, link_callback=link_callback
            # if error then show some funy view
            if pisa_status.err:
                return HttpResponse('We had some errors <pre>' + html + '</pre>')
            
            return response
        # except:
        #     pass
        # return HttpResponseRedirect(reverse_lazy('erp:salelist'))



https://www.youtube.com/watch?v=q70xzDG6nls


barcode
https://www.youtube.com/watch?v=VDIJ4GgKxR8

# REPORT LAB --- https://code-maven.com/creating-pdf-files-using-python
from django.http import FileResponse
import io
from reportlab.pdfgen import canvas
from reportlab.lib.units import inch
from reportlab.lib.pagesizes import A4
from .models import Billofland 


def venue_pdf(request):

    buf = io.BytesIO()
    c = canvas.Canvas(buf, pagesize=A4, bottomup=0)
    textob = c.beginText()
    textob.setTextOrigin(inch, inch)
    textob.setFont("Helvetica", 14)
 
    #design the model bill
    # arm = Material_type.objects.all().select_related('bill_of_land')
    arm = Billofland.objects.all()
    lines_bill =[]
    mat = Material_type.objects.all()
    lines_mat=[]
    for i in arm:
        lines_bill.append(i.bill_of_land)
        # lines_bill.append(i.date)
        lines_bill.append(i.vendor)
        lines_bill.append(" ")
        for y in mat:
            lines_mat.append(y.PO_number)
            lines_mat.append(y.Order_number)
            lines_mat.append(y.Side_Mark)
            lines_mat.append(y.carrier)
            lines_mat.append(y.Roll_number)
            # lines_mat.append(y.width)
            # lines_mat.append(y.length)
            # lines_mat.append(y.Quantity)
            # lines_mat.append(y.take_out_date)
            # lines_mat.append(y.take_out_name)
            lines_mat.append(y.material_type)
            lines_mat.append(y.store)
            # lines_mat.append(y.barcode)
            lines_mat.append(" ")
        
    # lines_bill = ["Line 1","Line 2"]
    for line in lines_bill:
        textob.textLine(line)
        for p in lines_mat:
                textob.textLine(p)      

    c.drawText(textob)
    c.showPage()
    c.save()
    buf.seek(0)  
    
    c.drawString(150,450,"Al√¥ mundo!")
    
    c.drawString(100, 810,"x100")
    c.drawString(200, 810,'x200')
    c.drawString(300, 810,'x300')
    c.drawString(400, 810,'x400')
    c.drawString(500, 810,'x500')

    c.drawString(10, 100,'y100')
    c.drawString(10, 200,'y200')
    c.drawString(10, 300,'y300')
    c.drawString(10, 300,'y400')
    c.drawString(10, 400,'y500')
    c.drawString(10, 500,'y600')
    c.drawString(10, 600,'y700')
    c.drawString(10, 700,'y800')
    # c.drawImage()    
    

    
    return FileResponse( buf, as_attachment=False, filename='venue.pdf')
        
        
# from reportlab.graphics.barcode import code39
# from reportlab.platypus import SimpleDocTemplate, Paragraph
# from reportlab.lib.styles import getSampleStyleSheet
# pdf = SimpleDocTemplate("barcode.pdf")
# flow_obj=[]
# styles=getSampleStyleSheet()
# codetext="-202206325878"
# code=code39.Standard39(codetext)
# flow_obj.append(code)
# pdf.build(flow_obj)


https://zerobugs.com.br/ver-post/dica-da-semana-4-dica-da-semana-4-busca-filtragem-paginacao-e-estilizacao-rapida-de-tabelas-com-o-da/



usado no pdf.html para iterar a lista
{% for Material_type in object_list %}
                                {% for x in uni %}

pip install -r requeriments.txt


                                <option> Acessories </option>
                                <option> Area Rugs </option>
                                <option>  Cabinet </option>
                                <option>  Carpet</option>
                                <option> Carpet Tile </option>
                                <option> Ceilings </option>
                                <option> Ceramic Tile </option>
                                <option> Displays </option>
                                <option> Fixtures </option>
                                <option> Installation Materials </option>
                                <option> Laminates </option>
                                <option> Pad </option>
                                <option> Rubber Tile </option>
                                <option> Runner </option>
                                <option> Stone </option>
                                <option>  Training </option>
                                <option> Unclassified </option>
                                <option> Vinyl </option>
                                <option>  Vinyl Sheet</option>
                                <option> Vinyl Tile </option>
                                <option>   Wall Base    </option>
                                <option> Wall Coverings   </option>
                                <option> wood    </option>     



                                https://pt.stackoverflow.com/questions/311669/como-criar-uma-rede-localintranet-com-django